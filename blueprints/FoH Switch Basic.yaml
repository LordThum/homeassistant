blueprint:
  domain: automation
  name: FoH Switch Basic
  input:
    controller:
      name: (Zigbee2MQTT) Controller Name
      description: The name of the controller as defined in z2m (e.g. Livingroom Switch)
      default: ""
    base_topic:
      name: (Zigbee2MQTT) Base mqtt topic
      description: The base topic as configured in z2m
      default: zigbee2mqtt
    hold_delay:
      name: Hold delay
      description:
        If the button has been held more than the configured Hold delay,
        the corresponding held action is triggered.
      default: 500
      selector:
        number:
          min: 100.0
          max: 1000.0
          unit_of_measurement: milliseconds
          mode: box
          step: 10.0
    buttons_left_entity:
      name: Entity Left Side
      description: Entity that is controlled by left Side
      default: []
      selector:
        entity: 
          reorder: false
          multiple: false
          domain: light
    buttons_right_entity:
      name: Entity Right Side
      description: Entity that is controlled by right Side
      default: []
      selector:
        entity: 
          reorder: false
          multiple: false
          domain: light

mode: restart
max_exceeded: silent
variables:
  hold_delay: !input hold_delay
trigger_variables:
  base_topic: !input base_topic
  controller: !input controller
trigger:
  - platform: mqtt
    topic: "{{ base_topic ~ '/' ~ controller }}"
condition:
  - condition: template
    value_template: >
      {{
        ((trigger.payload_json.elapsed is defined and
        trigger.payload_json.elapsed > hold_delay) or
        trigger.payload_json.elapsed is not defined) and
        trigger.payload_json.action != Null
      }}


action:
  - variables:
      controller: !input "controller"
      left_entity: !input buttons_left_entity
      right_entity: !input buttons_right_entity
  - choose:
      - conditions: '{{ "press_" | string in trigger.payload_json.action }}'
        sequence:
          - wait_for_trigger:
              - platform: mqtt
                topic: "{{ base_topic ~ '/' ~ controller ~ '/action' }}"
                payload: release_1
              - platform: mqtt
                topic: "{{ base_topic ~ '/' ~ controller ~ '/action' }}"
                payload: release_2
              - platform: mqtt
                topic: "{{ base_topic ~ '/' ~ controller ~ '/action' }}"
                payload: release_3
              - platform: mqtt
                topic: "{{ base_topic ~ '/' ~ controller ~ '/action' }}"
                payload: release_4
            timeout:
              milliseconds: !input "hold_delay"

          - choose:
            # Button pressed
            - conditions: '{{ trigger.payload_json.action == "press_1" and wait.trigger.payload == "release_1" }}'
              sequence:
              - action: mqtt.publish
                metadata: {}
                data:
                  evaluate_payload: false
                  qos: 0
                  retain: false
                  topic: zigbee2mqtt/{{ state_attr(left_entity, 'friendly_name') }}/set
                  payload: "{\"state\": \"on\"}"
            - conditions: '{{ trigger.payload_json.action == "press_2" and wait.trigger.payload == "release_2" }}'
              sequence:
              - action: mqtt.publish
                metadata: {}
                data:
                  evaluate_payload: false
                  qos: 0
                  retain: false
                  topic: zigbee2mqtt/{{ state_attr(left_entity, 'friendly_name') }}/set
                  payload: "{\"state\": \"off\"}"
            - conditions: '{{ trigger.payload_json.action == "press_3" and wait.trigger.payload == "release_3" }}'
              sequence:
              - action: mqtt.publish
                metadata: {}
                data:
                  evaluate_payload: false
                  qos: 0
                  retain: false
                  topic: zigbee2mqtt/{{ state_attr(right_entity, 'friendly_name') }}/set
                  payload: "{\"state\": \"on\"}"
            - conditions: '{{ trigger.payload_json.action == "press_4" and wait.trigger.payload == "release_4" }}'
              sequence:
              - action: mqtt.publish
                metadata: {}
                data:
                  evaluate_payload: false
                  qos: 0
                  retain: false
                  topic: zigbee2mqtt/{{ state_attr(right_entity, 'friendly_name') }}/set
                  payload: "{\"state\": \"off\"}"

            # Button hold
            - conditions: '{{ trigger.payload_json.action == "press_1" and wait.trigger == None }}'
              sequence: 
                - service: mqtt.publish
                  data:
                    payload: '{"brightness_move_onoff": 51 }'
                    topic: "zigbee2mqtt/{{ state_attr(left_entity, 'friendly_name') }}/set"
            - conditions: '{{ trigger.payload_json.action == "press_2" and wait.trigger == None }}'
              sequence: 
                - service: mqtt.publish
                  data:
                    payload: '{"brightness_move_onoff": -51 }'
                    topic: "zigbee2mqtt/{{ state_attr(left_entity, 'friendly_name') }}/set"
            - conditions: '{{ trigger.payload_json.action == "press_3" and wait.trigger == None }}'
              sequence: 
                - service: mqtt.publish
                  data:
                    payload: '{"brightness_move_onoff": 51 }'
                    topic: "zigbee2mqtt/{{ state_attr(right_entity, 'friendly_name') }}/set"
            - conditions: '{{ trigger.payload_json.action == "press_4" and wait.trigger == None }}'
              sequence: 
                - service: mqtt.publish
                  data:
                    payload: '{"brightness_move_onoff": -51 }'
                    topic: "zigbee2mqtt/{{ state_attr(right_entity, 'friendly_name') }}/set"

      # Button released after long press
      - conditions: '{{ "release_" | string in trigger.payload_json.action }}'
        sequence:
        - choose:
          - conditions: '{{ trigger.payload_json.action == "release_1" }}'
            sequence: 
              - service: mqtt.publish
                data:
                  payload: '{"brightness_move": "stop"}'
                  topic: "zigbee2mqtt/{{ state_attr(left_entity, 'friendly_name') }}/set"
          - conditions: '{{ trigger.payload_json.action == "release_2" }}'
            sequence: 
              - service: mqtt.publish
                data:
                  payload: '{"brightness_move": "stop"}'
                  topic: "zigbee2mqtt/{{ state_attr(left_entity, 'friendly_name') }}/set"
          - conditions: '{{ trigger.payload_json.action == "release_3" }}'
            sequence: 
              - service: mqtt.publish
                data:
                  payload: '{"brightness_move": "stop"}'
                  topic: "zigbee2mqtt/{{ state_attr(right_entity, 'friendly_name') }}/set"
          - conditions: '{{ trigger.payload_json.action == "release_4" }}'
            sequence: 
              - service: mqtt.publish
                data:
                  payload: '{"brightness_move": "stop"}'
                  topic: "zigbee2mqtt/{{ state_attr(right_entity, 'friendly_name') }}/set"