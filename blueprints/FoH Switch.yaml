blueprint:
  domain: automation
  name: FoH Switch
  input:
    name: Basics
    controller:
      name: (Zigbee2MQTT) Controller Name
      description: The name of the controller as defined in z2m (e.g. Livingroom Switch)
      default: ""
    base_topic:
      name: (Zigbee2MQTT) Base mqtt topic
      description: The base topic as configured in z2m
      default: zigbee2mqtt
    hold_delay:
      name: Hold delay
      description:
        If the button has been held more than the configured Hold delay,
        the corresponding held action is triggered.
      default: 500
      selector:
        number:
          min: 100.0
          max: 1000.0
          unit_of_measurement: milliseconds
          mode: box
          step: 10.0
    buttons:
      name: Buttons
      input:
        name: Buttons
        buttons_left_entity:
          name: Entity Left Side
          description: Entity that is controlled by left Side
          default: []
          selector:
            entity: 
        buttons_right_entity:
          name: Entity Right Side
          description: Entity that is controlled by right Side
          default: []
          selector:
            entity: 
        
mode: restart
max_exceeded: silent
variables:
  hold_delay: !input hold_delay
trigger_variables:
  base_topic: !input base_topic
  controller: !input controller
trigger:
  - platform: mqtt
    topic: "{{ base_topic ~ '/' ~ controller }}"
condition:
  - condition: template
    value_template:
      "{{\n  ('release_' in trigger.payload_json.action and trigger.payload_json.elapsed
      is defined)\n  or 'press_' in trigger.payload_json.action\n}}\n"

action:
  - variables:
      controller: !input controller
  - choose:
      # Button pressed
      - conditions:
          '{{ "release_" in trigger.payload_json.action and trigger.payload_json.elapsed
          | int < hold_delay }}'
        sequence:
          - choose:
                # Left
              - conditions: '{{ trigger.payload_json.action == "release_1" }}'
                sequence: !input buttons_left_entity
              - conditions: '{{ trigger.payload_json.action == "release_2" }}'
                sequence: !input buttons_left_entity
                # Right
              - conditions: '{{ trigger.payload_json.action == "release_3" }}'
                sequence: !input buttons_right_entity
              - conditions: '{{ trigger.payload_json.action == "release_4" }}'
                sequence: !input buttons_right_entity

      # Button held
      # - conditions: '{{ "press_" | string in trigger.payload_json.action }}'
      #   sequence:
      #     - delay:
      #         milliseconds: !input hold_delay
      #     - choose:
      #         - conditions: '{{ trigger.payload_json.action == "press_1" }}'
      #           sequence: !input button_1_held
      #         - conditions: '{{ trigger.payload_json.action == "press_2" }}'
      #           sequence: !input button_2_held

      # Button released
      # - conditions:
      #     '{{ "release_" in trigger.payload_json.action and trigger.payload_json.elapsed
      #     | int > hold_delay }}'
      #   sequence:
      #     - choose:
      #         - conditions: '{{ trigger.payload_json.action == "release_1" }}'
      #           sequence: !input button_1_released
      #         - conditions: '{{ trigger.payload_json.action == "release_2" }}'
      #           sequence: !input button_2_released